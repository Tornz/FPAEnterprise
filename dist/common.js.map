{"version":3,"sources":["webpack:///./src/app/data-services/bidDocument.services.ts","webpack:///./src/app/model/documents.model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAA2C;AACZ;AACsB;AAKrD;IADA;QAEI,mBAAc,GAAG,IAAI,4CAAO,EAAe,CAAC;QAEpC,iBAAY,GAAgB;YAChC,IAAI,gEAAS,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC,EAAE,IAAI,gEAAS,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC;YACpE,IAAI,gEAAS,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC,EAAE,IAAI,gEAAS,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC;SACvE,CAAC;QAMF,yCAAyC;QACzC,0DAA0D;QAC1D,wDAAwD;QACxD,sDAAsD;QACtD,wDAAwD;QACxD,IAAI;IACR,CAAC;IAVG,0CAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;IACrC,CAAC;IAVQ,mBAAmB;QAD/B,gEAAU,EAAE;OACA,mBAAmB,CAkB/B;IAAD,0BAAC;CAAA;AAlB+B;;;;;;;;;;;;;ACJhC;AAAA;AAAA;IAMI,mBAAY,SAAiB,EAAE,WAAmB,EAAE,KAAmB;QACnE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;IACL,gBAAC;AAAD,CAAC","file":"common.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Documents } from \"../model/documents.model\";\r\nimport { FileUpload } from \"../model/fileUpload.model\";\r\n\r\n\r\n@Injectable()\r\nexport class BidDocumentServices {\r\n    bidDocsChanged = new Subject<Documents[]>();\r\n\r\n    private bidDocuments: Documents[] = [\r\n        new Documents(1, \"Project A\", []), new Documents(2, \"Project B\", []),\r\n        new Documents(3, \"Project C\", []), new Documents(4, \"Project D\", [])\r\n    ];\r\n\r\n    getDocuments() {\r\n        return this.bidDocuments.slice();\r\n    }\r\n\r\n    // saveComponents(item: TechComponents) {\r\n    //     this.technologies.frontend = item.frontend.slice();\r\n    //     this.technologies.backend = item.backend.slice();\r\n    //     this.technologies.report = item.report.slice();\r\n    //     this.technologies.storage = item.storage.slice();\r\n    // }\r\n}\r\n\r\n\r\n","import { Project } from \"./project.model\";\r\nimport { FileUpload } from \"./fileUpload.model\";\r\n\r\nexport class Documents {\r\n    public projectId: number;\r\n    public projectName: string;\r\n    public files: FileUpload[];\r\n\r\n\r\n    constructor(projectId: number, projectName: string, files: FileUpload[]) {\r\n        this.projectId = projectId;\r\n        this.projectName = projectName;\r\n        this.files = files.slice();\r\n    }\r\n}\r\n"],"sourceRoot":""}